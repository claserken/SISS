defaults:
  - delete_mnist
  - _self_

project_name: mnist-deletion-hf-sweep
hydra:
  mode: MULTIRUN
  sweeper:
    params:
      +deletion: "{loss_fn: naive_del, inception_frequency: 75, training_steps: 750, loss_params: {}},
{loss_fn: importance_sampling_with_mixture, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 0.0, lambd: 0.0}, superfactor_decay: 0.98},
{loss_fn: importance_sampling_with_mixture, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 0.0, lambd: 0.0}, superfactor_decay: 0.99},
{loss_fn: importance_sampling_with_mixture, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 0.0, lambd: 0.0}, superfactor_decay: 1},
{loss_fn: importance_sampling_with_mixture, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 0.0, lambd: 0.5}, superfactor_decay: 0.98},
{loss_fn: importance_sampling_with_mixture, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 0.0, lambd: 0.5}, superfactor_decay: 0.99},
{loss_fn: importance_sampling_with_mixture, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 0.0, lambd: 0.5}, superfactor_decay: 1},
{loss_fn: importance_sampling_with_mixture, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 0.0, lambd: 1.0}, superfactor_decay: 0.98},
{loss_fn: importance_sampling_with_mixture, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 0.0, lambd: 1.0}, superfactor_decay: 0.99},
{loss_fn: importance_sampling_with_mixture, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 0.0, lambd: 1.0}, superfactor_decay: 1},
{loss_fn: importance_sampling_with_mixture, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 1.0, lambd: 0.0}, superfactor_decay: 0.98},
{loss_fn: importance_sampling_with_mixture, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 1.0, lambd: 0.0}, superfactor_decay: 0.99},
{loss_fn: importance_sampling_with_mixture, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 1.0, lambd: 0.0}, superfactor_decay: 1},
{loss_fn: importance_sampling_with_mixture, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 1.0, lambd: 0.5}, superfactor_decay: 0.98},
{loss_fn: importance_sampling_with_mixture, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 1.0, lambd: 0.5}, superfactor_decay: 0.99},
{loss_fn: importance_sampling_with_mixture, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 1.0, lambd: 0.5}, superfactor_decay: 1},
{loss_fn: importance_sampling_with_mixture, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 1.0, lambd: 1.0}, superfactor_decay: 0.98},
{loss_fn: importance_sampling_with_mixture, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 1.0, lambd: 1.0}, superfactor_decay: 0.99},
{loss_fn: importance_sampling_with_mixture, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 1.0, lambd: 1.0}, superfactor_decay: 1},
{loss_fn: importance_sampling_with_mixture, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 2.0, lambd: 0.0}, superfactor_decay: 0.98},
{loss_fn: importance_sampling_with_mixture, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 2.0, lambd: 0.0}, superfactor_decay: 0.99},
{loss_fn: importance_sampling_with_mixture, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 2.0, lambd: 0.0}, superfactor_decay: 1},
{loss_fn: importance_sampling_with_mixture, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 2.0, lambd: 0.5}, superfactor_decay: 0.98},
{loss_fn: importance_sampling_with_mixture, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 2.0, lambd: 0.5}, superfactor_decay: 0.99},
{loss_fn: importance_sampling_with_mixture, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 2.0, lambd: 0.5}, superfactor_decay: 1},
{loss_fn: importance_sampling_with_mixture, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 2.0, lambd: 1.0}, superfactor_decay: 0.98},
{loss_fn: importance_sampling_with_mixture, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 2.0, lambd: 1.0}, superfactor_decay: 0.99},
{loss_fn: importance_sampling_with_mixture, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 2.0, lambd: 1.0}, superfactor_decay: 1},
{loss_fn: double_forward_with_neg_del, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 0.0}, superfactor_decay: 0.98},
{loss_fn: double_forward_with_neg_del, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 0.0}, superfactor_decay: 0.99},
{loss_fn: double_forward_with_neg_del, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 0.0}, superfactor_decay: 1},
{loss_fn: double_forward_with_neg_del, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 1.0}, superfactor_decay: 0.98},
{loss_fn: double_forward_with_neg_del, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 1.0}, superfactor_decay: 0.99},
{loss_fn: double_forward_with_neg_del, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 1.0}, superfactor_decay: 1},
{loss_fn: double_forward_with_neg_del, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 2.0}, superfactor_decay: 0.98},
{loss_fn: double_forward_with_neg_del, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 2.0}, superfactor_decay: 0.99},
{loss_fn: double_forward_with_neg_del, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 2.0}, superfactor_decay: 1},
{loss_fn: simple_neg_del, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 0.0}, superfactor_decay: 0.98},
{loss_fn: simple_neg_del, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 0.0}, superfactor_decay: 0.99},
{loss_fn: simple_neg_del, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 0.0}, superfactor_decay: 1},
{loss_fn: simple_neg_del, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 1.0}, superfactor_decay: 0.98},
{loss_fn: simple_neg_del, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 1.0}, superfactor_decay: 0.99},
{loss_fn: simple_neg_del, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 1.0}, superfactor_decay: 1},
{loss_fn: simple_neg_del, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 2.0}, superfactor_decay: 0.98},
{loss_fn: simple_neg_del, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 2.0}, superfactor_decay: 0.99},
{loss_fn: simple_neg_del, inception_frequency: 50, training_steps: 250, loss_params: {superfactor: 2.0}, superfactor_decay: 1}"
                
# Extremely hackish way of updating training_steps and inception_frequency
training_steps: ${deletion.training_steps}                
metrics:
  inception_score:
    step_frequency: ${deletion.inception_frequency}